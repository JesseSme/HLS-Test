-- ----------------------------------------------------------------------
--  HLS HDL:        VHDL Netlister
--  HLS Version:    2021.1_1/966904 Production Release
--  HLS Date:       Thu Nov 11 21:13:39 PST 2021
-- 
--  Generated by:   jese@ubuntu
--  Generated date: Tue Nov 22 08:38:16 2022
-- ----------------------------------------------------------------------

-- 
-- ------------------------------------------------------------------
--  Design Unit:    button_top_core_core_fsm
--  FSM Module
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.ccs_out_pkg_v1.ALL;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;


ENTITY button_top_core_core_fsm IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    fsm_output : OUT STD_LOGIC_VECTOR (1 DOWNTO 0)
  );
END button_top_core_core_fsm;

ARCHITECTURE v1 OF button_top_core_core_fsm IS
  -- Default Constants

  -- FSM State Type Declaration for button_top_core_core_fsm_1
  TYPE button_top_core_core_fsm_1_ST IS (main_C_0, main_C_1);

  SIGNAL state_var : button_top_core_core_fsm_1_ST;
  SIGNAL state_var_NS : button_top_core_core_fsm_1_ST;

BEGIN
  button_top_core_core_fsm_1 : PROCESS (state_var)
  BEGIN
    CASE state_var IS
      WHEN main_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "10");
        state_var_NS <= main_C_0;
      -- main_C_0
      WHEN OTHERS =>
        fsm_output <= STD_LOGIC_VECTOR'( "01");
        state_var_NS <= main_C_1;
    END CASE;
  END PROCESS button_top_core_core_fsm_1;

  button_top_core_core_fsm_1_REG : PROCESS (clk)
  BEGIN
    IF clk'event AND ( clk = '1' ) THEN
      IF ( rst = '1' ) THEN
        state_var <= main_C_0;
      ELSE
        state_var <= state_var_NS;
      END IF;
    END IF;
  END PROCESS button_top_core_core_fsm_1_REG;

END v1;

-- ------------------------------------------------------------------
--  Design Unit:    button_top_core
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.ccs_out_pkg_v1.ALL;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;


ENTITY button_top_core IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    in_rsc_dat : IN STD_LOGIC;
    in_rsc_triosy_lz : OUT STD_LOGIC;
    return_rsc_dat : OUT STD_LOGIC;
    return_rsc_triosy_lz : OUT STD_LOGIC
  );
END button_top_core;

ARCHITECTURE v1 OF button_top_core IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL in_rsci_idat : STD_LOGIC;
  SIGNAL return_rsci_idat : STD_LOGIC;
  SIGNAL fsm_output : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL reg_return_rsc_triosy_obj_ld_cse : STD_LOGIC;

  SIGNAL in_rsci_dat : STD_LOGIC ;
  SIGNAL in_rsci_idat_1 : STD_LOGIC ;

  SIGNAL return_rsci_idat_1 : STD_LOGIC ;
  SIGNAL return_rsci_dat : STD_LOGIC ;

  COMPONENT button_top_core_core_fsm
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      fsm_output : OUT STD_LOGIC_VECTOR (1 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL button_top_core_core_fsm_inst_fsm_output : STD_LOGIC_VECTOR (1 DOWNTO 0);

BEGIN
  in_rsci : mgc_hls.ccs_in_pkg_v1.ccs_in_v1
    GENERIC MAP(
      rscid => 1,
      width => 1
      )
    PORT MAP(
      dat(0) => in_rsci_dat,
      idat(0) => in_rsci_idat_1
    );
  in_rsci_dat <= in_rsc_dat;
  in_rsci_idat <= in_rsci_idat_1;

  return_rsci : mgc_hls.ccs_out_pkg_v1.ccs_out_v1
    GENERIC MAP(
      rscid => 2,
      width => 1
      )
    PORT MAP(
      idat(0) => return_rsci_idat_1,
      dat(0) => return_rsci_dat
    );
  return_rsci_idat_1 <= return_rsci_idat;
  return_rsc_dat <= return_rsci_dat;

  in_rsc_triosy_obj : mgc_hls.mgc_io_sync_pkg_v2.mgc_io_sync_v2
    GENERIC MAP(
      valid => 0
      )
    PORT MAP(
      ld => reg_return_rsc_triosy_obj_ld_cse,
      lz => in_rsc_triosy_lz
    );
  return_rsc_triosy_obj : mgc_hls.mgc_io_sync_pkg_v2.mgc_io_sync_v2
    GENERIC MAP(
      valid => 0
      )
    PORT MAP(
      ld => reg_return_rsc_triosy_obj_ld_cse,
      lz => return_rsc_triosy_lz
    );
  button_top_core_core_fsm_inst : button_top_core_core_fsm
    PORT MAP(
      clk => clk,
      rst => rst,
      fsm_output => button_top_core_core_fsm_inst_fsm_output
    );
  fsm_output <= button_top_core_core_fsm_inst_fsm_output;

  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        return_rsci_idat <= '0';
      ELSIF ( (fsm_output(1)) = '0' ) THEN
        return_rsci_idat <= in_rsci_idat;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_return_rsc_triosy_obj_ld_cse <= '0';
      ELSE
        reg_return_rsc_triosy_obj_ld_cse <= NOT (fsm_output(1));
      END IF;
    END IF;
  END PROCESS;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    button_top
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.ccs_out_pkg_v1.ALL;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;


ENTITY button_top IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    in_rsc_dat : IN STD_LOGIC;
    in_rsc_triosy_lz : OUT STD_LOGIC;
    return_rsc_dat : OUT STD_LOGIC;
    return_rsc_triosy_lz : OUT STD_LOGIC
  );
END button_top;

ARCHITECTURE v1 OF button_top IS
  -- Default Constants

  COMPONENT button_top_core
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      in_rsc_dat : IN STD_LOGIC;
      in_rsc_triosy_lz : OUT STD_LOGIC;
      return_rsc_dat : OUT STD_LOGIC;
      return_rsc_triosy_lz : OUT STD_LOGIC
    );
  END COMPONENT;
BEGIN
  button_top_core_inst : button_top_core
    PORT MAP(
      clk => clk,
      rst => rst,
      in_rsc_dat => in_rsc_dat,
      in_rsc_triosy_lz => in_rsc_triosy_lz,
      return_rsc_dat => return_rsc_dat,
      return_rsc_triosy_lz => return_rsc_triosy_lz
    );
END v1;



